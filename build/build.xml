<project name="zap" default="dist" basedir=".">
    <description>Build ZAP.</description>
  <!-- set global properties for this build -->
  <property name="src" location="../src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="zap"/>
  <property name="dist.lib.dir"  location="../lib"/>
	
	<path id="dist.classpath">
		 <!--pathelement location="."/-->
		<fileset dir="${dist.lib.dir}" includes="**/*.jar" />
	</path>
	
	<echo message = "ClassPath=${dist.classpath}"/>
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <delete dir="${dist}" includeEmptyDirs="true"/>
    <delete dir="${build}" includeEmptyDirs="true"/>

    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <!--javac srcdir="${src}" destdir="${build}" classpath="zap.jar"/-->
    <javac srcdir="${src}" destdir="${build}">
    	<classpath>
			<fileset dir="${dist.lib.dir}">
				<include name="**/*.jar"/>
			</fileset>
    	</classpath>
    </javac>

  </target>

  <target name="dist" depends="compile" description="generate the distribution" >
  	<!-- Update the version.txt file with the new version name before generating the distribution -->
  	<loadfile property="version" srcfile="version.txt"></loadfile>

    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
    <!--copy file="lib.jar" tofile="${dist}/lib.jar"/--> 

    <copy file="${src}/xml/log4j.properties" tofile="${build}/xml/log4j.properties"/> 

    <copy todir="${build}/resource">
    	<fileset dir="${src}/resource" excludes="**/.svn/** **/_svn/**" />
    </copy>

  <copy todir="${dist}/xml">
  	<fileset dir="${src}/xml" excludes="**/.svn/** **/_svn/**" />
  </copy>
  <copy todir="${dist}/db">
  	<fileset dir="${src}/db" excludes="**/.svn/** **/_svn/**" />
  </copy>
  <copy todir="${dist}/dirbuster">
    <fileset dir="${src}/dirbuster" excludes="**/.svn/** **/_svn/**" />
  </copy>
  <copy todir="${dist}/filter">
  	<fileset dir="${src}/filter" excludes="**/.svn/** **/_svn/**" />
  </copy>
  <copy todir="${dist}/plugin">
  	<fileset dir="${src}/plugin" excludes="**/.svn/** **/_svn/**" />
  </copy>
  <copy todir="${dist}/session">
  	<fileset dir="${src}/session" excludes="**/.svn/** **/_svn/**" />
  </copy>
  <copy todir="${dist}/lang">
  	<fileset dir="${src}/lang" excludes="**/.svn/** **/_svn/**" />
  </copy>
  <copy todir="${dist}/license">
  	<fileset dir="${src}/license" excludes="**/.svn/** **/_svn/**" />
  </copy>
    <copy todir="${dist}/log">
      <fileset dir="${src}/log" excludes="**/.svn/** **/_svn/**" />
  </copy>
  <copy todir="${dist}/lib">
	<fileset dir="${dist.lib.dir}">
	  <include name="**/*.jar"/>
      <exclude name="**/.svn/**" />
      <exclude name="**/_svn/**" />
	</fileset>
  </copy>
  	<!-- Copy any scripts, and give execute perms -->
    <copy todir="${dist}">
      <fileset dir="${src}" includes="*.sh" excludes="**/.svn/** **/_svn/**" />
      <fileset dir="${src}" includes="*.bat" excludes="**/.svn/** **/_svn/**" />
    </copy>
    <chmod perm="ug+x">
        <!-- This only has any effect on Linux -->
        <fileset dir="${dist}">
            <include name="*.sh"/>
        	<exclude name="**/.svn/**" />
        	<exclude name="**/_svn/**" />
        </fileset>
    </chmod>

    <!--copy file="${src}/doc/release.txt" todir="${dist}"/-->

  	<manifestclasspath property="dist.manifest.classpath" jarfile="${dist}/zap.jar">
		<!--classpath refid="dist.classpath" /-->
    	<classpath>
			<fileset dir="${dist}/lib">
				<include name="**/*.jar"/>
			</fileset>
    		<!--path location="lang"/-->
    	</classpath>
	</manifestclasspath>

    <jar jarfile="${dist}/zap.jar" update="true" compress="false">
    	<zipfileset dir="${build}" prefix="" />
    	<manifest>
   			<attribute name="Main-Class" value="org.zaproxy.zap.ZAP" />
   			<attribute name="Class-Path" value="${dist.manifest.classpath}"/>
    		<attribute name="Implementation-Version" value="${version}"/>
    	</manifest>
    </jar>
  	
  	<!-- Tar up the release -->
  	<delete file="ZAP_${version}_Linux.tar.gz"/>
  	
  	<tar destfile="ZAP_${version}_Linux.tar.gz" compression="gzip" >
  	  <tarfileset dir="${dist}"
		          prefix="ZAP_${version}"
  	              preserveLeadingSlashes="false">
  	    <include name="**"/>
  	    <exclude name="**/.svn/**"/>
  	    <exclude name="**/_svn/**"/>
	    <exclude name="zap.sh"/>
  	  </tarfileset>
	  <tarfileset dir="${dist}"
		          prefix="ZAP_${version}"
	  			  filemode="755"
	              preserveLeadingSlashes="false">
	    <include name="zap.sh"/>
	  </tarfileset>
  	</tar>
  	
  </target>



</project>